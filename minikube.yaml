apiVersion: apps/v1
kind: Deployment
metadata:
  name: babylon
  labels:
    app: babylon
spec:
  replicas: 2
  selector:
    matchLabels:
      app: babylon
  template:
    metadata:
      labels:
        app: babylon
    spec:
      serviceAccountName: babylon-service-account
      containers:
        - name: babylon
          imagePullPolicy: Never
          image: babylon
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: babylon-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: babylon-cluster-role
rules:
  - apiGroups:
      - ""
    resources:
      - "services"
      - "endpoints"
      - "pods"
    verbs:
      - "get"
      - "delete"
      - "list"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: babylon-cluster-role-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: babylon-service-account
    namespace: default
roleRef:
  kind: ClusterRole
  name: babylon-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: babylon-service
spec:
  selector:
    app: babylon
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: babylon-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: babylon.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: babylon-service
                port:
                  number: 8080